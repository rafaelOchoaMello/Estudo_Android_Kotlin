87_88.Conceitos Iniciais

- Em um resumo simples, lambdas são funções anônimas que podem ser passadas como parâmetro 
para outras funções, além também de ser possível as armazenar em variáveis.


>> Exemplo :: Lambda nativo de ordenação --------------------------------------------------------------------

val nomes = arrayListOf<String>("Renata", "Bernardo", "Willian", "Andreia", "Caio")
val ordenados = nomes.sortBy({ it }) 


>> Exemplo :: Lambda de filtro dentro de uma classe + ordernação ---------------------------------------------

data class Aluno(val nome:String, val nota:Double)

fun main(...){
	val listaAlunos = arrayListOf(
		Aluno("Pedro", 7.4),
		Aluno("Arthur", 8.0),
		Aluno("Rafael", 9.7),
		Aluno("Ricardo", 5.4),
	)

	//Filtro a partir de um campo da classe + ordernação por outro 
	val aprovados = alunos.filter({ it.nota >= 7 }).sortedBy({ it.nome })
}


>> Exemplo :: Implementando lambdas próprios ------------------------------------------------------------------

package lambdas

//Para declara uma lambda, podemos a fazer atribuindo a um atributo.
//Note que tanto os argumentos quando a lógica de retorno estão dentro de {}
//como se fosse um objeto.

// O 'corpo' do método é tudo após '->'
// O retorno é sempre o último elemento, sem a necessidade de declarar o tipo,
//isto é inferido pelo compilador

val soma = { x: Int, y: Int -> x + y }
val subtracao = { x: Int, y: Int -> x - y }

//Exemplo: Incremento do método anterior para adicionar um log
//Como citado anteriormente, o retorno é o x+y, por é o último
//elemento do lambda

val soma2 = { x: Int, y: Int ->
    println("O valor é ${x + y}")
    x + y
}


//Um método de espero um lambda como parâmetro ficaria
// fun nomeDoMetodo(...params, nomeGenericoLambda: (tiposParams) -> tipoRetorno ) : tipoRetornoMetodoOriginal

fun calcular(a: Int, b: Int, operacao: (Int, Int) -> Int): Int {
    return operacao(a, b)
}

//A utilização/chamda do método QUE utiliza o lambda como parâmetro fica

val resultadoSoma: Int = calcular(1, 1, soma)
val resultadoSubtracao: Int = calcular(1, 1, subtracao)
