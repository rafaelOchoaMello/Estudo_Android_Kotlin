100.O que eh uma activity

- Em um resumo máximo, podemos relacionar uma activity do Android como sendo uma tela, trabalhando
em um conceito de 'pilha', sendo então, dispostas uma sobre a outra.

- Diferente dos paradigmas em que os aplicativos são lançados a partir de um método main(),
no Android inicia a partir de uma instância de Activity, invocando métodos de callback que 
correspondem a estágios específicos do ciclo de vida.

- Uma activity fornece a janela na qual o app desenha a prórpia UI, geralmente preenchedo a tela, mas
é importante notar que isso não é uma regra, e é perfeitamente possível ser menor e flutuar
sobre outras janelas.

- Geralmente, uma atividade implementa uma tela em um app. Por exemplo, em um app uma activity
pode implementar uma tela de 'preferências', enquanto outra activity implementa uma tela de 
'selecionar foto'.

- A grande maioria dos app contém várias telas, então é justo afirmar que por consequência, 
também implementam em média um número igual de activities. Normalmente, há uma activity que 
é declarada como sendo a 'principal', sendo a primeira tela a ser exibida quando o app é iniciado.

- Embora funcionem juntas, cada uma é vagamente vinculada a outra. Geralmente há dependências mínimas
entre elas. Na verdade, com frequência elas iniciam atividades pertencentes a outros apps. Por exemplo,
um app de navegação pode iniciar a atividade "Compartilhar" de um app de mídia social.

- Criar uma nova activity é fácil, basta ir no mesmo pacote onde esta a 
main activity, escolher 'new' -> 'activity' e nela escolher o tipo de 
activity desejada.

- A troca entre as duas também é relativamente simples, sendo necessário
somente a utilização de um intent, passando o contexto atual e também
a nova activity como callback. Após, utilizar o intent como parâmetro
do método 'startActivity()'.


Exemplo :: 
	
	fun mudarDeActivity(view:View){

		val intent: Intent( this, nomeSegundaActivity::class.java )
		startActivity(intent)
		
	}


- É preciso notar, que como citado anteriormente, há um conceito de pilha, onde cada activity
fica sobreposte sobre outras, desta forma, não seria interessante utilizar o mesmo 'startActivity'
para voltar para o penultimo elemento inserido na pilha.

- Para tratar dos casos em que desejamos 'fechar' a activity mais atual e voltar para a penúltima, 
podemos utilizar o método nativo 'finish()'. 

Exemplo :: 

  fun voltar(view: View) {
        finish()
  }

  


Ps :: O Intent é um objeto de mensagem que pode ser usado para solicitar uma ação de outro componente do aplicativo, embora
os intents facilitem a comunicação entre os componente de diversas formas, há três casos fundamentais de uso:

- Iniciar uma activity
- Iniciar um serviço
- Fornecer uma transmissão

Documentação Intent  :: https://developer.android.com/guide/components/intents-filters?hl=pt-br
Documentação Activ.  :: https://developer.android.com/guide/components/activities/intro-activities?hl=pt-br#tcoa